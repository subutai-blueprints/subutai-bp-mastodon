# Ansible Playbook for Subutai Mastodon blueprint
#
# As per: https://docs.joinmastodon.org/admin/install/
#
---

- hosts: mastodon
  remote_user: root

  tasks:

    - name: Upgrade debian
      apt:
        update_cache: true
        upgrade: "yes"

    - name: Install basic debs
      apt:
        name: 
        - ca-certificates
        state: present

    - name: Add nodesource key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Add yarn key
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        state: present

    - name: Add nodesource
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x buster main
        update_cache: yes
        state: present

    - name: Add yarn
      apt_repository: 
        repo: deb https://dl.yarnpkg.com/debian/ stable main
        update_cache: yes
        state: present

    - name: Install required debs
      apt:
        name: 
        - aptitude
        - curl
        - wget
        - build-essential
        - imagemagick
        - ffmpeg
        - nodejs
        - git
        - sudo
        - nginx
        - yarn
        - rubygems
        - redis-server
        - redis-tools 
        - postgresql
        - postgresql-contrib
        - openssl
        - exim4
        - python-psycopg2
        - libjemalloc-dev
        - libpq-dev
        - libxml2-dev
        - libxslt1-dev
        - libprotobuf-dev
        - protobuf-compiler
        - libssl-dev
        - libyaml-dev
        - libreadline6-dev
        - zlib1g-dev
        - libncurses5-dev
        - libffi-dev
        - libgdbm-dev
        - libidn11-dev
        - libicu-dev
        state: present

    - name: Fix redis service
      template:
        src: files/redis-server.service
        dest: /lib/systemd/system

    - name: Restart redis
      systemd:
        name: redis-server
        state: restarted
        daemon_reload: yes

    - name: Copy mailname
      template:
        src: files/mailname
        dest: /etc/mailname

    - name: Copy exim4 config
      template:
        src: files/update-exim4.conf.conf
        dest: /etc/exim4/update-exim4.conf.conf

    - name: Update exim config
      shell: /usr/sbin/update-exim4.conf

    - name: Restart exim
      systemd:
        name: exim4
        state: restarted

    - name: Get rvm key
      shell: gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

    - name: Get rvm_installer
      get_url:
        url: https://get.rvm.io
        dest: /usr/local/bin/rvm_installer

    - name: Make rvm_installer executable
      file:
        path: /usr/local/bin/rvm_installer
        state: touch
        mode: 0700

    - name: Run rvm_installer
      shell: /usr/local/bin/rvm_installer

    - name: Add mastodon user
      user: 
        name: mastodon
        group: users
        shell: /bin/bash

    - name: Set ruby version
      shell: ". /usr/local/rvm/scripts/rvm && /usr/local/rvm/bin/rvm install ruby-2.7.2"
      args:
        executable: /bin/bash

    - name: Set ruby version
      shell: ". /usr/local/rvm/scripts/rvm && /usr/local/rvm/bin/rvm install ruby-2.7.2"
      args:
        executable: /bin/bash
      become: yes
      become_user: mastodon

    - name: Set default ruby version
      shell: ". /usr/local/rvm/scripts/rvm && rvm --default use ruby-2.7.2"
      args:
        executable: /bin/bash

    - name: Set default ruby version
      shell: ". /usr/local/rvm/scripts/rvm && rvm --default use ruby-2.7.2"
      args:
        executable: /bin/bash
      become: yes
      become_user: mastodon

    - name: Install bundle
      gem:
        name: bundle
        state: present
      become: yes
      become_user: mastodon

    - name: Create PostgreSQL mastodon user
      postgresql_user:
        name: mastodon
        role_attr_flags: CREATEDB
      become: true
      become_user: postgres

    - name: Clone mastodon
      git:
        repo: https://github.com/tootsuite/mastodon.git
        dest: /home/mastodon/live
        version: stable-3.2
      become: true
      become_user: mastodon

    - name: Switch to latest release
      shell: git checkout $(git tag -l | grep -v 'rc[0-9]*$' | sort -V | tail -n 1)
      args: 
        chdir: /home/mastodon/live
      become: true
      become_user: mastodon

    - name: Configure bundle deployment
      shell: su - mastodon -c "cd live && bundle config deployment 'true'"
      args: 
        executable: /bin/bash

    - name: Configure bundle without development
      shell: su - mastodon -c "cd live && bundle config without 'development test'" 
      args: 
        executable: /bin/bash

    - name: Deploy Bundles
      shell: su - mastodon -c "cd live && bundle install -j$(getconf _NPROCESSORS_ONLN)"
      args: 
        executable: /bin/bash

    - name: Install dependencies with yarn
      shell: su - mastodon -c "yarn install --pure-lockfile"
      args:
        executable: /bin/bash

    - name: Copy env file
      template:
        src: files/env.production
        dest: /home/mastodon/live/.env.production

    - name: Compile assets
      shell: su - mastodon -c "cd live && RAILS_ENV=production bundle exec rake assets:precompile"
      args:
        executable: /bin/bash

    - name: Create database
      shell: su - mastodon -c "cd live && RAILS_ENV=production bundle exec rake db:create"
      args:
        executable: /bin/bash

    - name: Create or migrate database
      shell: su - mastodon -c "cd live && RAILS_ENV=production bundle exec rake db:migrate:setup"
      args:
        executable: /bin/bash

    - name: Copy mastodon-sidekiq.service
      template:
        src: files/mastodon-sidekiq.service
        dest: /lib/systemd/system/

    - name: Copy mastodon-streaming.service
      template:
        src: files/mastodon-streaming.service
        dest: /lib/systemd/system/

    - name: Copy mastodon-web.service
      template:
        src: files/mastodon-web.service
        dest: /lib/systemd/system/

    - name: Enable mastodon services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
        masked: no
        daemon_reload: yes
      with_items:
          - mastodon-sidekiq
          - mastodon-streaming
          - mastodon-web

    - name: Install nginx.config
      template:
        src: files/nginx.conf
        dest: /etc/nginx/sites-available/default

    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted

    - name: Update user environment
      lineinfile: 
        path: /home/mastodon/.bashrc
        line: "export RAILS_ENV=production"
        state: present
      become: yes
      become_user: mastodon

    - name: Update user path
      lineinfile: 
        path: /home/mastodon/.bashrc
        line: "export PATH=~/live/bin:$PATH"
        state: present
      become: yes
      become_user: mastodon

    - name: Create admin user
      shell: su - mastodon -c "RAILS_ENV=production ~/live/bin/tootctl accounts create {{admin_user}} --email {{admin_email}} --role=admin --confirmed"
      args:
        executable: /bin/bash

    - name: Create setuserpwd
      template:
        src: files/setuserpwd
        dest: /home/mastodon/live/bin/setuserpwd
        mode: "0777"
      become: yes
      become_user: mastodon

    - name: Set admin password
      shell: su - mastodon -c "RAILS_ENV=production /home/mastodon/live/bin/setuserpwd {{admin_user}} {{admin_pwd}}"
      args:
        executable: /bin/bash

# vim: ts=2 et nowrap autoindent